micronaut:
    security:
      enabled: true
    server:
      port: 8080
akhq:
  server:
    access-log:
      enabled: true
      format: "[Date: {}] [Duration: {} ms] [Url: {} {}] [Status: {}] [Ip: {}] [Length: {}] [Port: {}]"
      name: org.akhq.log.access
    base-path: ""
  # default kafka properties for each clients, available for admin / producer / consumer (optional)
  clients-defaults:
    consumer:
      properties:
        isolation.level: read_committed

  # list of kafka cluster available for akhq
  connections:
    local-cluster:
      properties:
        bootstrap.servers: broker:9092
      schema-registry:
        url: "http://schema-registry:8081"
  pagination:
    page-size: 25 # number of elements per page (default : 25)
    threads: 16 # Number of parallel threads to resolve page

  # Topic list display options (optional)
  ui-options:
    topic:
        default-view: HIDE_INTERNAL
        internal-regexps:
          - ^_.*$
          - ^.*_schemas$
          - ^.*connect-config$
          - ^.*connect-offsets$1
          - ^.*connect-status$
        partition: 3
        replication: 3
        retention: 172800000
        skip-consumer-groups: false
        stream-regexps:
         - ^.*-changelog$
         - ^.*-repartition$
         - ^.*-rekey$
  # Topic display data options (optional)
    topic-data:
        sort: OLDEST # default sort order (OLDEST, NEWEST) (default: OLDEST)
        size: 50 # max record per page (default: 50)
        poll-timeout: 1000 # The time, in milliseconds, spent waiting in poll if data is not available in the buffer.
  # Auth & Roles (optional)
  security:
    default-group: admin # Default groups for all the user even unlogged user
    # Groups definition
    groups:
        admin:
            name: admin # Group name
            roles:  # roles for the group
              - topic/read
              - topic/insert
              - topic/delete
              - topic/config/update
              - node/read
              - node/config/update
              - topic/data/read
              - topic/data/insert
              - topic/data/delete
              - group/read
              - group/delete
              - group/offsets/update
              - registry/read
              - registry/insert
              - registry/update
              - registry/delete
              - registry/version/delete
              - acls/read
              - connect/read
              - connect/insert
              - connect/update
              - connect/delete
              - connect/state/update
            attributes:
                # Regexp to filter topic available for group
                topics-filter-regexp: "^().*"